#include <dt-bindings/zmk/matrix_transform.h>
/*
/{
    chosen {
        zmk,kscan = &default_kscan;
        zmk,matrix_transform = &default_transform;
    };

    default_kscan: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "default_kscan";
        diode-direction = "col2row";

        row-gpios = <&pro-micro /*#*| (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
                    /*repeat for all rows*|;
        
        col-gpios = <&pro_micro /*#*| GPIO_ACTIVE_HIGH>
                    /*repeat for all col*|;
    };

    default_transform: matrix_transform {             /*allows for custom shape in matrix,*|
        compatible = "zmk,matrix-transform";          /*expects basic matrix without this*|
        rows = </*#*|>;
        columns = </*#*|>;

        map = <
            RC(/*#,#*|), RC(/*#*|), /*...*|
        >;
    };
};
*/

  
/{
    chosen {
        zmk,kscan = &default_kscan;
    };
    
    default_kscan: kscan {
        compatible = "zmk,kscan-gpio-direct";
        label = "default_kscan";
        
        input-gpios =
            <&pro_micro 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
    };
};

/ {
    encoder_knob: encoder_knob {
        compatible = "zmk,behavior-rotary-encoder";
        label = "Rotary Encoder";                    /*optional*/
        a-gpios = <&gpio0 10 GPIO_PULL_UP>;          
        b-gpios = <&gpio0 11 GPIO_PULL_UP>;
        steps = <4>;                                /*state changes per step, change if want faster or slower*/
        clockwise-binding = <&kp VOL_UP>;            /*
        counter-clockwise-binding = <&kp VOL_DOWN>;
    };

    encoder_btn: encoder_btn {
        compatible = "zmk,behavior-momentary";
        label = "Encoder Button";
        bindings = <&kp MUTE>;
        gpios = <&gpio0 12 GPIO_ACTIVE_LOW>;
    };
};
